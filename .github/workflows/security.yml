name: Security Pipeline
on:
  pull_request: {}
  push:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      sbom-hash: ${{ steps.hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 10.17.1 }
      - name: Ensure pnpm available (fallback)
        shell: bash
        run: |
          if ! command -v pnpm >/dev/null 2>&1; then
            echo "pnpm not found; installing via npm";
            npm install -g pnpm@10.17.1
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Install deps
        run: pnpm install --frozen-lockfile
      - name: Generate SBOM
        run: pnpm sbom
      - name: Hash SBOM
        id: hash
        run: echo "hash=$(sha256sum sbom.json | cut -d ' ' -f1)" >> $GITHUB_OUTPUT
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json



  secrets-scan:
    runs-on: ubuntu-latest
    needs: prep
    steps:
      - uses: actions/checkout@v4
      - name: Install TruffleHog
        run: pip install --no-cache-dir trufflehog
      - name: TruffleHog scan (fail on verified findings)
        run: |
          set -e
          trufflehog filesystem --no-update --format json --only-verified . > trufflehog.json || true
          # Determine if any verified secrets present
          if [ -s trufflehog.json ]; then
            # Count lines (each finding is a JSON object on its own line in recent versions)
            COUNT=$(wc -l < trufflehog.json | tr -d ' ')
            if [ "$COUNT" -gt 0 ]; then
              echo "Found $COUNT potential verified secrets" >&2
              exit 1
            fi
          fi
          echo "No verified secrets detected"
      - name: Upload TruffleHog Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-results
          path: trufflehog.json

  audit:
    runs-on: ubuntu-latest
    needs: prep
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 10.17.1 }
      - name: Ensure pnpm available (fallback)
        shell: bash
        run: |
          if ! command -v pnpm >/dev/null 2>&1; then
            npm install -g pnpm@10.17.1
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: pnpm install --frozen-lockfile
      - name: pnpm audit (non-blocking low/med)
        run: |
          pnpm audit --json > audit.json || true
          # Fail only if high/critical present (handled by script)
          node scripts/pnpm-audit-check.cjs
      - uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: audit.json

  licenses:
    runs-on: ubuntu-latest
    needs: prep
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 10.17.1 }
      - name: Ensure pnpm available (fallback)
        shell: bash
        run: |
          if ! command -v pnpm >/dev/null 2>&1; then
            npm install -g pnpm@10.17.1
          fi
      - run: pnpm install --frozen-lockfile
      - name: License Policy
        run: pnpm check:licenses > license-report.txt && npx license-checker --json > license-report.json || true
      - name: Upload License Report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: |
            license-report.txt
            license-report.json

  sbom-diff:
    runs-on: ubuntu-latest
    needs: prep
    steps:
      - uses: actions/checkout@v4
      - name: Download previous SBOM (if any)
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: security.yml
          name: sbom
          path: prev-sbom
          if_no_artifact_found: ignore
      - name: Compare SBOM
        run: |
          if [ -f prev-sbom/sbom.json ]; then
            echo "Comparing SBOMs"
            diff -u <(jq -S '.components[]?.name' prev-sbom/sbom.json | sort) <(jq -S '.components[]?.name' sbom.json | sort) || true
          else
            echo "No previous SBOM to compare"
          fi

  gate:
    runs-on: ubuntu-latest
    needs: [secrets-scan, licenses, sbom-diff, audit]
    steps:
      - name: Gate Summary
        run: echo "All required security jobs completed successfully." 
